version: '3'

# Captain consists of 3 services:
# 1. captain-server
# 2. captain-simulation-worker
# 3. redis

services:
  # captain-server initiates a thrift server that listens to Mission Control commands
  captain-server:
    build:
      context: .
      dockerfile: server/Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_THRESHOLD: INFO
      SERVER_HOST: "0.0.0.0"
      SERVER_PORT: 4800
      MISSION_CONTROL_HOST: mc
      MISSION_CONTROL_PORT: 9090
    links:
      - redis:redis
    external_links:
      - missioncontrol_missioncontrol_1:mc
    networks:
      - dav
  # captain-simulation-worker processes captain-server simulation jobs
  # and updates status on Mission Control for every active vehicle
  captain-simulation-worker:
    build:
      context: .
      dockerfile: simulator/Dockerfile
    environment:
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_THRESHOLD: INFO
      SIMULATOR_WORKER_INTERVAL: 1000
      MISSION_CONTROL_HOST: mc
      MISSION_CONTROL_PORT: 9090
    links:
      - redis:redis
    external_links:
      - missioncontrol_missioncontrol_1:mc
    networks:
      - dav
  # redis server persists active vehicle details and manages the simulations queue
  redis:
    image: redis
    networks:
      - dav

# a docker network must be set with the name 'dav' on the machine running this docker-compose.
# the purpose of this network is to link between docker instances running both Captain and Mission Control simultaneously.
networks:
  dav:
    external: true
