// Autogenerated by Thrift Compiler (0.10.0)
// DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING

package types

import (
	"bytes"
	"fmt"
	"git.apache.org/thrift.git/lib/go/thrift"
)

// (needed to ensure safety because of naive import list construction.)
var _ = thrift.ZERO
var _ = fmt.Printf
var _ = bytes.Equal

type Timestamp int64

func TimestampPtr(v Timestamp) *Timestamp { return &v }

type WayPoints []*Coordinates

func WayPointsPtr(v WayPoints) *WayPoints { return &v }

// Attributes:
//  - Latitude
//  - Longitude
type Coordinates struct {
  Latitude float64 `thrift:"latitude,1,required" db:"latitude" json:"latitude"`
  Longitude float64 `thrift:"longitude,2,required" db:"longitude" json:"longitude"`
}

func NewCoordinates() *Coordinates {
  return &Coordinates{}
}


func (p *Coordinates) GetLatitude() float64 {
  return p.Latitude
}

func (p *Coordinates) GetLongitude() float64 {
  return p.Longitude
}
func (p *Coordinates) Read(iprot thrift.TProtocol) error {
  if _, err := iprot.ReadStructBegin(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read error: ", p), err)
  }

  var issetLatitude bool = false;
  var issetLongitude bool = false;

  for {
    _, fieldTypeId, fieldId, err := iprot.ReadFieldBegin()
    if err != nil {
      return thrift.PrependError(fmt.Sprintf("%T field %d read error: ", p, fieldId), err)
    }
    if fieldTypeId == thrift.STOP { break; }
    switch fieldId {
    case 1:
      if err := p.ReadField1(iprot); err != nil {
        return err
      }
      issetLatitude = true
    case 2:
      if err := p.ReadField2(iprot); err != nil {
        return err
      }
      issetLongitude = true
    default:
      if err := iprot.Skip(fieldTypeId); err != nil {
        return err
      }
    }
    if err := iprot.ReadFieldEnd(); err != nil {
      return err
    }
  }
  if err := iprot.ReadStructEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T read struct end error: ", p), err)
  }
  if !issetLatitude{
    return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Latitude is not set"));
  }
  if !issetLongitude{
    return thrift.NewTProtocolExceptionWithType(thrift.INVALID_DATA, fmt.Errorf("Required field Longitude is not set"));
  }
  return nil
}

func (p *Coordinates)  ReadField1(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadDouble(); err != nil {
  return thrift.PrependError("error reading field 1: ", err)
} else {
  p.Latitude = v
}
  return nil
}

func (p *Coordinates)  ReadField2(iprot thrift.TProtocol) error {
  if v, err := iprot.ReadDouble(); err != nil {
  return thrift.PrependError("error reading field 2: ", err)
} else {
  p.Longitude = v
}
  return nil
}

func (p *Coordinates) Write(oprot thrift.TProtocol) error {
  if err := oprot.WriteStructBegin("Coordinates"); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write struct begin error: ", p), err) }
  if p != nil {
    if err := p.writeField1(oprot); err != nil { return err }
    if err := p.writeField2(oprot); err != nil { return err }
  }
  if err := oprot.WriteFieldStop(); err != nil {
    return thrift.PrependError("write field stop error: ", err) }
  if err := oprot.WriteStructEnd(); err != nil {
    return thrift.PrependError("write struct stop error: ", err) }
  return nil
}

func (p *Coordinates) writeField1(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("latitude", thrift.DOUBLE, 1); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 1:latitude: ", p), err) }
  if err := oprot.WriteDouble(float64(p.Latitude)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.latitude (1) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 1:latitude: ", p), err) }
  return err
}

func (p *Coordinates) writeField2(oprot thrift.TProtocol) (err error) {
  if err := oprot.WriteFieldBegin("longitude", thrift.DOUBLE, 2); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field begin error 2:longitude: ", p), err) }
  if err := oprot.WriteDouble(float64(p.Longitude)); err != nil {
  return thrift.PrependError(fmt.Sprintf("%T.longitude (2) field write error: ", p), err) }
  if err := oprot.WriteFieldEnd(); err != nil {
    return thrift.PrependError(fmt.Sprintf("%T write field end error 2:longitude: ", p), err) }
  return err
}

func (p *Coordinates) String() string {
  if p == nil {
    return "<nil>"
  }
  return fmt.Sprintf("Coordinates(%+v)", *p)
}

